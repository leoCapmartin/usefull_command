#!/bin/sh

RED='\033[0;32m'
NC='\033[0m' # No Color

display_help () {
    echo USAGE:
    echo "     submit [OPTION] <exercice name>"
    echo
    echo OPTIONS:
    echo "     -cf | --clang-format: clang format your code"
    echo "     -pt | --push-tags: tags and pushes only the tags"
    echo "     -nc | --no-commit: submit will not commit your work"
    echo "     -m: different message for commit"
    echo "     -h | --help: display help"
}

format () {
    echo -e "${RED}clang-format code${NC}"
    cfiles=$(ls "$exo_name"/*.c)
    for file in $cfiles; do
        clang-format -i ./${file}
    done

    hfiles=$(ls "$exo_name"/*.h)
    for file in $hfiles; do
        clang-format -i ./${file}
    done

    cppfiles=$(ls "$exo_name"/*.cc)
    for file in $cppfiles; do
        clang-format -i ./${file}
    done

    hhfiles=$(ls "$exo_name"/*.hh)
    for file in $hhfiles; do
        clang-format -i ./${file}
    done

    hxxfiles=$(ls "$exo_name"/*.hxx)
    for file in $hxxfiles; do
        clang-format -i ./${file}
    done
}

behave () {
    if [ $# -lt 1 ]; then
        echo "Invalid number of arguments"
        display_help
        exit 1
    fi

    format_code=false
    commit=true
    commit_msg=
    push_tags=--follow-tags
    while [ $# -gt 1 ]; do
        case $1 in
            -cf | --clang-format)
                format_code=true
                ;;
            -pt | --push-tags)
                commit=false
                push_tags=--tags
                ;;
            -nc | --no-commit)
                commit=false
                ;;
            -m)
                shift
                commit_msg=$1
                ;;
            -* | --*)
                echo "Unknown option $1"
                display_help
                exit 1
        esac
        shift
    done

    exo_name=$1
    version=$(date +"%D-%T")
    msg="$exo_name $version"

    if [ -z "$commit_msg" ]; then
        commit_msg=$msg
    fi

    if $commit; then
        if $format_code; then
            format
        fi

        echo -e "${RED}git add $exo_name${NC}"
        git add "$exo_name"
        if [ "$?" -ne 0 ]; then 
            exit 1 
        fi

        echo -e "${RED}git commit -m \"$commit_msg\"${NC}"
        git commit -m "$commit_msg"
        if [ "$?" -ne 0 ]; then 
            exit 1 
        fi
    fi

    echo -e "${RED}git tag -a \"exercise-${exo_name}-v$(date +"%s")\" -m \"$msg\"${NC}"
    git tag -a "exercise-${exo_name}-v$(date +"%s")" -m "$msg"
    if [ "$?" -ne 0 ]; then 
        exit 1 
    fi

    echo -e "${RED}git push ${push_tags} origin master${NC}"
    git push ${push_tags} origin master
    if [ "$?" -ne 0 ]; then 
        exit 1 
    fi
}

if [ "$#" -eq 0 ]; then
    display_help
    exit 1
fi

case $1 in
    -h | --help)
        display_help
        exit
        ;;
    *)
        behave "$@"
esac
